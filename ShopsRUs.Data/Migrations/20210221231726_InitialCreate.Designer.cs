// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShopsRUs.Data;

namespace ShopsRUs.Data.Migrations
{
    [DbContext(typeof(ShopsRUsDbContext))]
    [Migration("20210221231726_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.3");

            modelBuilder.Entity("ShopsRUs.Core.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsAffiliate")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsEmployee")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("298bd642-113f-41bc-a60f-4fe6ebab78d6"),
                            DateCreated = new DateTime(2021, 2, 22, 0, 17, 24, 881, DateTimeKind.Local).AddTicks(4911),
                            DateModified = new DateTime(2021, 2, 22, 0, 17, 24, 884, DateTimeKind.Local).AddTicks(211),
                            FirstName = "Jane",
                            IsAffiliate = true,
                            IsDeleted = false,
                            IsEmployee = false,
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = new Guid("3546ea9a-661f-4332-83a8-1024258ea7b9"),
                            DateCreated = new DateTime(2021, 2, 22, 0, 17, 24, 884, DateTimeKind.Local).AddTicks(7841),
                            DateModified = new DateTime(2021, 2, 22, 0, 17, 24, 884, DateTimeKind.Local).AddTicks(7860),
                            FirstName = "Bash",
                            IsAffiliate = false,
                            IsDeleted = false,
                            IsEmployee = true,
                            LastName = "Ali"
                        },
                        new
                        {
                            Id = new Guid("45018454-e409-4d64-ac8e-4cc9a6b1e1b9"),
                            DateCreated = new DateTime(2016, 2, 22, 0, 17, 24, 884, DateTimeKind.Local).AddTicks(9305),
                            DateModified = new DateTime(2021, 2, 22, 0, 17, 24, 884, DateTimeKind.Local).AddTicks(9297),
                            FirstName = "Shina",
                            IsAffiliate = false,
                            IsDeleted = false,
                            IsEmployee = false,
                            LastName = "Peters"
                        },
                        new
                        {
                            Id = new Guid("e38c35a7-9ecf-4112-a845-ff3aeb6cd991"),
                            DateCreated = new DateTime(2021, 2, 22, 0, 17, 24, 884, DateTimeKind.Local).AddTicks(9601),
                            DateModified = new DateTime(2021, 2, 22, 0, 17, 24, 884, DateTimeKind.Local).AddTicks(9608),
                            FirstName = "Victor",
                            IsAffiliate = false,
                            IsDeleted = false,
                            IsEmployee = false,
                            LastName = "Ifeanyi"
                        });
                });

            modelBuilder.Entity("ShopsRUs.Core.Entities.Discount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("TEXT");

                    b.Property<string>("DiscountType")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Percentage")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Discounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ae43c021-4a23-439e-a402-0682499a932f"),
                            DateCreated = new DateTime(2021, 2, 22, 0, 17, 24, 889, DateTimeKind.Local).AddTicks(6801),
                            DateModified = new DateTime(2021, 2, 22, 0, 17, 24, 889, DateTimeKind.Local).AddTicks(6840),
                            DiscountType = "discount_for_affiliate",
                            IsDeleted = false,
                            Name = "Discount For Affiliate",
                            Percentage = 10m
                        },
                        new
                        {
                            Id = new Guid("f42fe41d-a8e1-427a-b916-1692a128311a"),
                            DateCreated = new DateTime(2021, 2, 22, 0, 17, 24, 891, DateTimeKind.Local).AddTicks(6741),
                            DateModified = new DateTime(2021, 2, 22, 0, 17, 24, 891, DateTimeKind.Local).AddTicks(6779),
                            DiscountType = "discount_for_employees",
                            IsDeleted = false,
                            Name = "Discount For Employees",
                            Percentage = 30m
                        },
                        new
                        {
                            Id = new Guid("a7fe0188-59a0-4924-93a8-e990ee7ef8f3"),
                            DateCreated = new DateTime(2021, 2, 22, 0, 17, 24, 891, DateTimeKind.Local).AddTicks(6800),
                            DateModified = new DateTime(2021, 2, 22, 0, 17, 24, 891, DateTimeKind.Local).AddTicks(6804),
                            DiscountType = "discount_for_loyal_customers",
                            IsDeleted = false,
                            Name = "Discount For Loyal Customers",
                            Percentage = 0m
                        },
                        new
                        {
                            Id = new Guid("4cc77530-874c-4d6f-a459-6d6d04d5b899"),
                            DateCreated = new DateTime(2021, 2, 22, 0, 17, 24, 891, DateTimeKind.Local).AddTicks(6813),
                            DateModified = new DateTime(2021, 2, 22, 0, 17, 24, 891, DateTimeKind.Local).AddTicks(6817),
                            DiscountType = "every_100_dollar_discount",
                            IsDeleted = false,
                            Name = "Every 100 Dollar Discount",
                            Percentage = 0m
                        });
                });

            modelBuilder.Entity("ShopsRUs.Core.Entities.Invoice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("ShopsRUs.Core.Entities.Invoice", b =>
                {
                    b.HasOne("ShopsRUs.Core.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });
#pragma warning restore 612, 618
        }
    }
}
